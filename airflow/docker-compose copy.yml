version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - airflow_network

  airflow-init:
    image: apache/airflow:2.8.1
    depends_on:
      - postgres
    user: "50000:50000"  # Airflow 컨테이너의 사용자로 실행
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    entrypoint: /bin/bash -c "airflow db init && airflow users create --username admin --firstname admin --lastname admin --role Admin --password admin --email admin@example.com"
    volumes:
      - ./logs:/opt/airflow/logs
      - ./dags:/opt/airflow/dags
      - ../data:/opt/airflow/data
      - ../data_collect:/opt/airflow/data_collect
      - /root/.venv:/opt/venv  # 가상환경을 컨테이너에 마운트
    networks:
      - airflow_network
  
  airflow-webserver:
    image: apache/airflow:2.8.1
    container_name: airflow-webserver
    restart: always
    depends_on:
      - airflow-init
    ports:
      - "8080:8080"
    user: "50000:50000"  # Airflow 컨테이너의 사용자로 실행
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    command: webserver
    volumes:
      - ./logs:/opt/airflow/logs
      - ./dags:/opt/airflow/dags
      - ../data:/opt/airflow/data
      - ../data_collect:/opt/airflow/data_collect
      - /root/.venv:/opt/venv  # 가상환경을 컨테이너에 마운트
    networks:
      - airflow_network

  airflow-scheduler:
    image: apache/airflow:2.8.1
    container_name: airflow-scheduler
    restart: always
    user: "50000:50000"  # Airflow 컨테이너의 사용자로 실행
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    command: scheduler
    volumes:
      - ./logs:/opt/airflow/logs
      - ./dags:/opt/airflow/dags
      - ../data:/opt/airflow/data
      - ../data_collect:/opt/airflow/data_collect
      - /root/.venv:/opt/venv  # 가상환경을 컨테이너에 마운트
    networks:
      - airflow_network

volumes:
  postgres_data:

networks:
  airflow_network:
    driver: bridge